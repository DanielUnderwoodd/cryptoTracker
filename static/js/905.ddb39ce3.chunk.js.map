{"version":3,"file":"static/js/905.ddb39ce3.chunk.js","mappings":"gPAkBWA,EAAY,CACrB,CACEC,KApBEC,WACJ,WAAYC,IAAO,eACjBC,KAAKC,OAASC,KAAKC,MAAe,IAATJ,EAAKK,GAAW,KAAKC,QAAQ,GAIvD,OAHA,+BACD,WACE,OAAOL,KAAKC,UACb,EANGH,GAqBFQ,KAAM,WACNC,SAAU,SAEZ,CACEV,KAhBEW,WACJ,WAAYT,IAAO,eACjBC,KAAKS,QAAUV,EAAKW,EAIrB,OAHA,+BACD,WACE,OAAOV,KAAKS,YACb,EANGD,GAiBFF,KAAM,aACNC,SAAU,Y,iDCvBC,SAASI,IACtB,OACE,UAACC,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,CAAMC,UAAU,YAAYC,GAAG,YAA/B,WACE,UAACF,EAAA,SAAD,WACG,KACD,SAAC,IAAD,CAAUG,OAAQ,IAAKC,MAAO,CAAEC,MAAO,cAEzC,UAACL,EAAA,OAAD,CAAWI,MAAO,CAAEE,WAAY,GAAhC,WACE,SAACN,EAAA,QAAD,WACE,SAAC,IAAD,CAAUG,OAAQ,QAEpB,UAACH,EAAA,QAAD,WACG,KACD,SAAC,IAAD,CAAUG,OAAQ,cAGhB,KACR,qB,cCbeI,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GACnB,WAAYC,GAAQ,IAAD,yBACjB,gBACKC,MAAQ,CACXrB,MAAO,EACPQ,QAAS,EACTb,UAAAA,EACA2B,SAAU,SAAWF,EAAMG,KAC3BC,GAAI,IAAIC,UAAU,qCAPH,EAkFlB,OAzEA,kCAED,SAAWC,EAAS5B,GAClB,IAAMF,EAAmB8B,EAAnB9B,KAAMU,EAAaoB,EAAbpB,SACRqB,EAAW,IAAI/B,EAAKE,GACxBC,KAAK6B,UAAL,UACGtB,EAAWqB,EAASE,cAExB,kCACD,WACE9B,KAAKsB,MAAMG,GAAGM,QACdC,QAAQC,IAAI,eACb,uBAED,WAAa,IAAD,OACJR,EAAOzB,KAAKsB,MAAZG,GACAS,EAAM,CACVC,OAAQ,YACRC,OAAQ,CAAC,GAAD,OACHpC,KAAKqB,MAAMG,KAAKa,cADb,2BAEHrC,KAAKqB,MAAMG,KAAKa,cAFb,gBAIRC,GAAI,GAGNb,EAAGc,OAAS,WACVP,QAAQC,IAAI,aACZR,EAAGe,KAAKC,KAAKC,UAAUR,KAGzBT,EAAGkB,QAAU,WACXX,QAAQC,IAAI,iBAGdR,EAAGmB,UAAY,SAACC,GACd,IAAI9C,EAAO0C,KAAKK,MAAMD,EAAQ9C,MAC9B,EAAKuB,MAAM1B,UAAUmD,SAAQ,SAACpB,GACxB5B,EAAKiD,IAAMrB,EAAQrB,MACrB,EAAK2C,WAAWtB,EAAS5B,SAIhC,kEAED,8EACEC,KAAK0B,YADP,kGAFC,IAED,oBAGA,WACE,IAAMwB,GACJ,UAACtC,EAAA,EAAD,YACE,UAACC,EAAA,EAAD,CACEsC,OAAQnD,KAAKsB,MAAMb,QAAU,EAAI,SAAW,UAC5CK,UACEd,KAAKsB,MAAMb,QAAU,EACjB,6BACA,8BALR,WAQE,SAACI,EAAA,SAAD,UAAcb,KAAKqB,MAAMG,KAAK4B,iBAC9B,UAACvC,EAAA,OAAD,YACE,SAACA,EAAA,QAAD,UAAab,KAAKsB,MAAMrB,SACxB,SAACY,EAAA,QAAD,UAAab,KAAKsB,MAAMb,QAAU,OAClC,UAAC,KAAD,CAAM4C,GAAIrD,KAAKsB,MAAMC,SAArB,UACG,KACD,SAAC,MAAD,CAA6BT,UAAU,8BAGrC,KACR,qBAIJ,OAAO,8BAAGd,KAAKsB,MAAMrB,MAAQiD,GAAO,SAACvC,EAAD,UACrC,EAnFkBS,CAAakC,EAAAA","sources":["components/Body/CoinLists/Coin/Store.js","components/Skeleton/Threeline.js","components/Body/CoinLists/Coin/Coin.js"],"sourcesContent":["class aggTrade {\r\n  constructor(data) {\r\n    this.price = (Math.round(data.p * 100) / 100).toFixed(3);\r\n  }\r\n  getData() {\r\n    return this.price;\r\n  }\r\n}\r\n\r\nclass twentyFourHrTicker {\r\n  constructor(data) {\r\n    this.percent = data.P;\r\n  }\r\n  getData() {\r\n    return this.percent;\r\n  }\r\n}\r\n\r\nexport let dataEntry = [\r\n  {\r\n    name: aggTrade,\r\n    type: \"aggTrade\",\r\n    property: \"price\",\r\n  },\r\n  {\r\n    name: twentyFourHrTicker,\r\n    type: \"24hrTicker\",\r\n    property: \"percent\",\r\n  },\r\n];\r\n","import React from \"react\";\r\nimport Skeleton from \"react-loading-skeleton\";\r\nimport { Col, Card } from \"react-bootstrap\";\r\n\r\nexport default function Threeline() {\r\n  return (\r\n    <Col>\r\n      <Card className=\"coin-card\" bg=\"Secondary\">\r\n        <Card.Header>\r\n          {\" \"}\r\n          <Skeleton height={100} style={{ width: \"100%\" }} />\r\n        </Card.Header>\r\n        <Card.Body style={{ paddingTop: 0 }}>\r\n          <Card.Title>\r\n            <Skeleton height={24} />\r\n          </Card.Title>\r\n          <Card.Title>\r\n            {\" \"}\r\n            <Skeleton height={20} />\r\n          </Card.Title>\r\n        </Card.Body>\r\n      </Card>{\" \"}\r\n      <br />\r\n    </Col>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { dataEntry } from \"./Store\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { Col, Card } from \"react-bootstrap\";\r\nimport Threeline from \"../../../Skeleton/Threeline\";\r\nimport { MdOutlineKeyboardArrowRight } from \"react-icons/md\";\r\nimport \"./style.css\";\r\n\r\nexport default class Coin extends Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      price: 0,\r\n      percent: 0,\r\n      dataEntry,\r\n      pathname: \"/coin/\" + props.coin,\r\n      ws: new WebSocket(\"wss://stream.binance.com:9443/ws\"),\r\n    };\r\n  }\r\n\r\n  setSegment(segment, data) {\r\n    let { name, property } = segment;\r\n    let response = new name(data);\r\n    this.setState({\r\n      [property]: response.getData(),\r\n    });\r\n  }\r\n  componentWillUnmount() {\r\n    this.state.ws.close();\r\n    console.log(\"closing..\");\r\n  }\r\n\r\n  WebSocket() {\r\n    let { ws } = this.state;\r\n    const msg = {\r\n      method: \"SUBSCRIBE\",\r\n      params: [\r\n        `${this.props.coin.toLowerCase()}usdt@aggTrade`,\r\n        `${this.props.coin.toLowerCase()}usdt@ticker`,\r\n      ],\r\n      id: 1,\r\n    };\r\n\r\n    ws.onopen = function open() {\r\n      console.log(\"connected\");\r\n      ws.send(JSON.stringify(msg));\r\n    };\r\n\r\n    ws.onclose = function close() {\r\n      console.log(\"disconnected\");\r\n    };\r\n\r\n    ws.onmessage = (message) => {\r\n      var data = JSON.parse(message.data);\r\n      this.state.dataEntry.forEach((segment) => {\r\n        if (data.e === segment.type) {\r\n          this.setSegment(segment, data);\r\n        }\r\n      });\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.WebSocket();\r\n  }\r\n  render() {\r\n    const card = (\r\n      <Col>\r\n        <Card\r\n          border={this.state.percent < 0 ? \"danger\" : \"success\"}\r\n          className={\r\n            this.state.percent < 0\r\n              ? \"coin-card coin-card-danger\"\r\n              : \"coin-card coin-card-success\"\r\n          }\r\n        >\r\n          <Card.Header>{this.props.coin.toUpperCase()}</Card.Header>\r\n          <Card.Body>\r\n            <Card.Title>{this.state.price}</Card.Title>\r\n            <Card.Title>{this.state.percent + \"%\"}</Card.Title>\r\n            <Link to={this.state.pathname}>\r\n              {\" \"}\r\n              <MdOutlineKeyboardArrowRight className=\"arrow-navigation\" />\r\n            </Link>\r\n          </Card.Body>\r\n        </Card>{\" \"}\r\n        <br />\r\n      </Col>\r\n    );\r\n\r\n    return <>{this.state.price ? card : <Threeline />}</>;\r\n  }\r\n}\r\n"],"names":["dataEntry","name","aggTrade","data","this","price","Math","round","p","toFixed","type","property","twentyFourHrTicker","percent","P","Threeline","Col","Card","className","bg","height","style","width","paddingTop","Coin","props","state","pathname","coin","ws","WebSocket","segment","response","setState","getData","close","console","log","msg","method","params","toLowerCase","id","onopen","send","JSON","stringify","onclose","onmessage","message","parse","forEach","e","setSegment","card","border","toUpperCase","to","Component"],"sourceRoot":""}